plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
}

architectury {
    minecraft = minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"

        modCompileOnlyApi "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"

        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${mapping_version}@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    version = mod_version
    group = maven_group

    repositories {
        maven {
            name "ParchmentMC"
            url "https://maven.parchmentmc.org"
        }
        maven {
            name "CurseMaven"
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven {
            name "NeoForge"
            url "https://maven.neoforged.net/releases/"
        }
        maven {
            name "Progwml6's maven" // JEI
            url "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            name "Jared's maven" // JEI
            url "https://maven.blamejared.com/"
        }
        maven {
            name "ModMaven" // JEI
            url "https://modmaven.dev"
        }
        maven {
            name "TerraFomersMC" // ModMenu
            url "https://maven.terraformersmc.com/"
        }
        maven {
            name "Ladysnake Mods" // Cardinal Components
            url "https://maven.ladysnake.org/releases"
        }
        maven {
            name "Shedaniel" // Cloth Config
            url "https://maven.shedaniel.me/"
        }
        maven {
            url "https://maven.jamieswhiteshirt.com/libs-release" // Reach Entity Attributes
            content {
                includeGroup "com.jamieswhiteshirt"
            }
        }
        flatDir {
            dir "libs"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding "UTF-8"
        options.release.set(21)
    }

    java {
        withSourcesJar()
    }
}

tasks.register("publishAllCurseforgeAndModrinth", Task) {
    dependsOn ":forge:publishCurseForgeAndModrinth"
    dependsOn ":fabric:publishCurseForgeAndModrinth"
    dependsOn ":neoforge:publishCurseForgeAndModrinth"
}
